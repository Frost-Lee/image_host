
import shortuuid
import os

class DataManager(object):
    """ The manager that handles file I/O for a session. This manager will only 
        keep 1 file instance.

    Attributes:
        uuid: The uuid of the session, generated by `shortuuid`. This uuid will 
            be used as the saved file name.
        file: The file instance that the manager keeps.
        container_path: The file saving directory.
    """
    def __init__(self, file, container_path):
        """ Initialization method.

        Args:
            file: A `werkzeug.datastructures.FileStorage` object.
            container_path: A str object stands for the file saving directory.
        """
        self.uuid = shortuuid.uuid()
        self.file = file
        self.container_path = container_path
        os.makedirs(self.container_path)
    
    def save(self):
        """ Save the file instance to the saving directory.
        """
        file.save(self.path())
    
    def file_name(self):
        """ Get the name of the file.
        """
        return self.uuid + file.filename.split('.')[0]

    def path(self):
        """ Get the file saving path.
        """
        return os.path.join(self.container_path, self.file_name())

